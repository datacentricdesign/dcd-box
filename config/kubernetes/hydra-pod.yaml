apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: hydra
  name: hydra
spec:
  containers:
  - args:
    - serve
    - all
    env:
    - name: CORS_ALLOWED_ORIGINS
      value: http://localhost:4200
    - name: DSN
      value: postgres://:@postgresd:5432/?sslmode=disable
    - name: ISSUER_URL
      value: '://:'
    - name: LOGIN_CONSENT_REQUEST_LIFESPAN
      value: 15m
    - name: LOG_LEVEL
    - name: OAUTH2_CONSENT_URL
      value: ://:/auth/consent
    - name: OAUTH2_ERROR_URL
      value: ://:/auth/error
    - name: OAUTH2_EXPOSE_INTERNAL_ERRORS
      value: "1"
    - name: OAUTH2_LOGIN_URL
      value: ://:/auth/signin
    - name: OAUTH2_LOGOUT_REDIRECT_URL
      value: ://:/
    - name: SECRETS_SYSTEM
    - name: SERVE_TLS_ALLOW_TERMINATION_FROM
      value: 172.18.0.16/24
    - name: TTL_ACCESS_TOKEN
      value: 24h
    - name: TTL_AUTH_CODE
      value: 24h
    - name: TTL_ID_TOKEN
      value: 24h
    - name: TTL_REFRESH_TOKEN
      value: 720h
    - name: URLS_SELF_ISSUER
      value: '://:'
    image: 'oryd/hydra:'
    name: hydra
    ports:
    - containerPort: 4444
    - containerPort: 4445
    resources: {}
    volumeMounts:
    - mountPath: /etc/certs
      name: hydra-claim0
    - mountPath: /.hydra
      name: hydra-claim1
  restartPolicy: OnFailure
  volumes:
  - name: hydra-claim0
    persistentVolumeClaim:
      claimName: hydra-claim0
  - name: hydra-claim1
    persistentVolumeClaim:
      claimName: hydra-claim1
status: {}
